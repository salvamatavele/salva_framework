<?php 
session_start();
if ($_SESSION['login'] === true) {
 header('location: ' . $_SERVER['HTTP_REFERER']);
}
 ?>
<?php $_shouldextend[1]=1; ?>
<?php $this->startSection('content'); ?>
 <div class="uk-flex uk-flex-center uk-flex-middle uk-background-muted uk-height-viewport" id="sign"
 data-uk-height-viewport>
 <div class="uk-position-bottom-center uk-position-small uk-visible@m uk-position-z-index">
 <span class="uk-text-small uk-text-muted">Â© 2021 All right reserved - <a
 href="https://github.com/zzseba78/Kick-Off">salva|framework</a> | Built with <a
 href="http://getuikit.com" title="Visit UIkit 3 site" target="_blank" data-uk-tooltip><span
 data-uk-icon="uikit"></span></a></span>
 </div>
 <div class="uk-width-medium uk-padding-small">
 <!-- login -->
 <form class="toggle-class" method="POST" @submit.prevent="onReset">
 <fieldset class="uk-fieldset">
 <input type="hidden" value="PUT" v-model='method'>
 <div class="uk-margin-small">
 <div class="uk-inline uk-width-1-1">
 <span class="uk-form-icon uk-form-icon-flip" data-uk-icon="icon: lock"></span>
 <input id="password" class="uk-input uk-border-pill" required placeholder="New Password"
 type="password" v-model="password">
 </div>
 </div>
 <div class="uk-margin-small">
 <div class="uk-inline uk-width-1-1">
 <span class="uk-form-icon uk-form-icon-flip" data-uk-icon="icon: lock"></span>
 <input id="password" class="uk-input uk-border-pill" required placeholder="Confirm Password"
 type="password" v-model="confirm_password">
 </div>
 </div>
 <div class="uk-margin-bottom">
 <button type="submit" class="uk-button uk-button-primary uk-border-pill uk-width-1-1">Reset Password<div v-if="loading" uk-spinner></div></button>
 </div>
 </fieldset>
 </form>
 <!-- /login -->
 
 </div>

 </div>
<?php $this->stopSection(); ?>

<?php $this->startPush('js'); ?>
 <script>
 const Toast = Swal.mixin({
 toast: true,
 position: 'top-end',
 showConfirmButton: false,
 timer: 4000,
 timerProgressBar: true,
 didOpen: (toast) => {
 toast.addEventListener('mouseenter', Swal.stopTimer)
 toast.addEventListener('mouseleave', Swal.resumeTimer)
 }
 });

 function isCapsLockOn(e) {
 var keyCode = e.keyCode ? e.keyCode : e.which;
 var shiftKey = e.shiftKey ? e.shiftKey : ((keyCode == 16) ? true : false);
 return (((keyCode >= 65 && keyCode <= 90) && !shiftKey) || ((keyCode >= 97 && keyCode <= 122) && shiftKey))
 }

 function showCapsLockMsg(e) {
 if (isCapsLockOn(e)) {
 Toast.fire({
 icon: 'warning',
 title: 'Caps Lock is on',
 })
 }
 }

 document.onkeypress = function(e) {
 e = e || window.event;
 showCapsLockMsg(e);
 }

 var app = new Vue({
 el: '#sign',
 data: {
 password: '',
 confirm_password: '',
 method: 'PUT',
 loading: false
 },
 
 methods: {
 onReset() {
 if (this.confirm_password !== '' && this.password !== '') {
 var formData = new FormData()
 formData.append('confirm_password', this.confirm_password)
 formData.append('password', this.password)
 formData.append('_method', this.method)
 this.loading =! false
 axios({
 method: 'post',
 url: "<?php echo \htmlentities($router->route('password.store'), ENT_QUOTES, 'UTF-8', false); ?>",
 data: formData
 })
 .then(response => {
 this.loading =! true
 if (response.data.status == 'success') {
 if (response.data.message) {
 Toast.fire({
 icon: 'success',
 title: response.data.message,
 })
 setTimeout("window.location = '<?php echo \htmlentities($router->route('login'), ENT_QUOTES, 'UTF-8', false); ?>';",
 1000);
 }
 } else {
 if (response.data.errors) {
 var errors = response.data.errors
 let text = ''
 for (let i in errors) {
 text += errors[i] + '\n';

 }
 Toast.fire({
 icon: 'error',
 title: text,
 })
 }
 if (response.data.message) {
 Toast.fire({
 icon: 'error',
 title: response.data.message,
 })
 }

 }
 })
 .catch(error => {
 console.log(error)
 })

 } else {
 Toast.fire({
 icon: 'error',
 title: 'All inputs is required field',
 })
 }
 }
 },
 });
 </script>
<?php $this->stopPush(); ?>

<?php if (isset($_shouldextend[1])) { echo $this->runChild('layouts.app'); } ?>